Our database design satisfies Boyce-Codd Normal Form (BCNF) and all lower normal forms for nearly all of its relations. The design was refined through multiple normalization steps, including the separation of entities, removal of redundant attributes, and restructuring of relationships so that every functional dependency has a left hand side that is a superkey. These changes ensure the database avoids redundancy, update anomalies, and maintains strong consistency throughout the schema.

A major improvement in the design can be seen in how users are represented. In the earlier version, all users were stored in a single table with a flag indicating whether each user was a professor. This led to redundancy and many null attributes for users who did not share the same role. The revised design introduces subclasses to represent different user types, such as professors and students. This allows each subclass to contain only the attributes relevant to that role, such as verification badges for professors, while general information remains in a shared user entity. This structure ensures that each table contains only data relevant to its purpose and that every attribute is functionally tied to its key, achieving BCNF for user-related data.

The handling of relationships was also improved to support higher normalization. In the earlier model, relationships such as users taking courses or creating resources were represented as direct many-to-many links. These have been replaced with relationships with associated attributes that clearly define how users interact with courses and resources. For example, the relationship between a user and a course now includes its own linking entity that records details like the course section or enrollment status. This design ensures that all attributes are clearly associated with their corresponding entities and that the relationships are represented without unnecessary repetition. As a result, the schema satisfies BCNF for these interactions.

The resource structure also demonstrates normalization in practice. Initially, different types of learning materials,such as notes, images, videos, and websites,were stored together in one table, causing redundant and overlapping attributes. The current design uses specialization, where each resource type is modeled as a separate subtype of a general resource entity. Each subtype contains only the fields relevant to its format, such as duration for videos or dimensions for images. This prevents null values, simplifies data management, and ensures that each entity is focused and well-defined.

The course entity has also been refined to improve clarity and consistency. It now includes fields such as subject, code name, catalog number, and year, each functionally dependent on the course’s unique identifier. Relationships linking professors to the courses they teach are clearly defined, reducing ambiguity and supporting consistent data representation.

In summary, the database design achieves Boyce-Codd Normal Form through careful use of specialization, relational attributes, and well-defined relationships. Every table represents a single concept with attributes directly related to its key. The result is a well-structured, consistent, and efficient schema that minimizes redundancy and supports the system’s data integrity across all entities and relationships.
